name: Import existing infra (one-time)
on:
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3
  TF_WORKING_DIR: infra-terraform

jobs:
  import:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534393012:role/GitHubActionsCdkDeployRole
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init (remote backend)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false -reconfigure

      - name: Import DynamoDB table if it exists
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          set -e
          if aws dynamodb describe-table --table-name payments >/dev/null 2>&1; then
            terraform import -input=false aws_dynamodb_table.payments payments || true
          else
            echo "Table 'payments' not found. Skipping."
          fi

      - name: Import IAM role if it exists
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          set -e
          ROLE_NAME="payments-dev-lambda-exec"
          if aws iam get-role --role-name "$ROLE_NAME" >/dev/null 2>&1; then
            terraform import -input=false aws_iam_role.lambda_exec "$ROLE_NAME" || true
          else
            echo "Role '$ROLE_NAME' not found. Skipping."
          fi

      - name: Import IAM policy if it exists
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          set -e
          POLICY_NAME="payments-dev-ddb-rw"
          POLICY_ARN=$(aws iam list-policies --scope Local --query "Policies[?PolicyName=='${POLICY_NAME}'].Arn | [0]" --output text)
          if [ "$POLICY_ARN" != "None" ] && [ -n "$POLICY_ARN" ]; then
            echo "Policy exists ($POLICY_ARN). Importing into state..."
            terraform import -input=false aws_iam_policy.ddb_rw "$POLICY_ARN" || true
          else
            echo "Policy '${POLICY_NAME}' not found. Skipping."
          fi

      - name: Terraform Plan (should NOT try to recreate those)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -input=false -no-color -var="region=${{ env.AWS_REGION }}"
