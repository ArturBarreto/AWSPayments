name: Bootstrap Terraform Remote State (one-time)
on:
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3
  STATE_BUCKET: tf-state-982534393012-eu-west-3
  LOCK_TABLE: tf-locks

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534393012:role/GitHubActionsCdkDeployRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Create S3 bucket for state (idempotent)
        run: |
          set -e
          if aws s3api head-bucket --bucket "$STATE_BUCKET" 2>/dev/null; then
            echo "Bucket exists"
          else
            aws s3api create-bucket --bucket "$STATE_BUCKET" --create-bucket-configuration LocationConstraint=${AWS_REGION}
          fi
          aws s3api put-bucket-versioning --bucket "$STATE_BUCKET" --versioning-configuration Status=Enabled
          aws s3api put-bucket-encryption --bucket "$STATE_BUCKET" --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'

      - name: Create DynamoDB lock table (idempotent)
        run: |
          set -e
          if aws dynamodb describe-table --table-name "${LOCK_TABLE}" >/dev/null 2>&1; then
            echo "Lock table exists"
          else
            aws dynamodb create-table \
              --table-name "${LOCK_TABLE}" \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --billing-mode PAY_PER_REQUEST
            aws dynamodb wait table-exists --table-name "${LOCK_TABLE}"
          fi

      - name: Show outputs
        run: |
          echo "S3 bucket: ${STATE_BUCKET}"
          echo "DDB lock table: ${LOCK_TABLE}"
